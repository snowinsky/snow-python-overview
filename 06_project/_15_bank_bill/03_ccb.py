from socket import *  # 导入 socket 模块
import datetime
import xml.etree.ElementTree as ET

bank_acct_list = (
'12050183510000001449', '12050183510000002021', '12050183510000002022', '12050183510000001896', '12050183510000000599',
'12050183510000000608', '12050183510000000609', '12050183510000000610', '12050183510000000611', '12050183510000000445',
'12050183510000000629', '12050183510000000630', '12050183510000000631', '12050183510000000638', '12050183510000000639',
'12050183510000000640', '12050183510000000641', '12050183510000000642', '12050183510000000643', '12050183510000000644',
'12050183510000000645', '12050183510000000646', '12050183510000000647-0001', '12050183510000000647-0002',
'12050183510000000647-0003', '12050183510000000647-0004', '12050183510000000647-0005', '12050183510000000647-0007',
'12050183510000000647-0008', '12050183510000000647-0009', '12050183510000000647-0010', '12050183510000000647-0011',
'12050183510000000647-0012', '12050183510000000647-0013', '12050183510000000647-0014', '12050183510000000647-0015',
'12050183510000000763', '12050183510000000780', '12050183510000000781', '12050183510000000782',
'12050183510000000647-0006', '12050183510000000647-0016', '12050183510000000647-0017', '12050183510000000647-0018',
'12050183510000000647-0019', '12050183510000000647-0020', '12050183510000000808', '12050183510000000809-0001',
'12050183510000000809-0002', '12050183510000000809-0003', '12050183510000000809-0004', '12050183510000000910-0001',
'12050183510000000912-0001', '12050183510000000912-0002', '12050183510000000912-0003', '12050183510000000647-0021',
'12050183510000000647-0023', '12050183510000000647-0026', '12050183510000000647-0027', '12050183510000000912-0004',
'12050183510000000912-0005', '12050183510000000966-0001', '12050183510000000965-0001', '12050183510000000965-0002',
'12050183510000000964-0001', '12050183510000000647-0022', '12050183510000000647-0024', '12050183510000000647-0025',
'12050183510000000647-0028', '12050183510000000647-0029', '12050183510000000647-0030', '12050183510000000809-0005',
'12050183510000000809-0006', '12050183510000000809-0007', '12050183510000000809-0008', '12050183510000000912-0006',
'12050183510000000912-0007', '12050183510000000964-0002', '12050183510000000965-0003', '12050183510000000965-0004',
'12050183510000000965-0005', '12050183510000000966-0002', '12050183510000000966-0003', '12050183510000001240',
'12050183510000001245', '12050183510000001246', '12050183510000001247', '12050183510000001248', '12050183510000001250',
'12050183510000001251', '12050183510000001254', '12050183510000001443', '12050183510000001444', '12050183510000001445',
'12050183510000001446', '12050183510000001447', '12050183510000001448', '12050183510000001452', '12050183510000001541',
'12050183510000001543', '12050183510000001544', '12050183510000001545', '12050183510000001546', '12050183510000002018',
'12050183510000002024', '12050183510000002554')

ccb_ebs_ip = '10.25.2.221'
ccb_ebs_port = 12345
ccb_ebs_customer = 'P636067462#0H'
ccb_ebs_user = 'WLPT13'
ccb_ebs_password = '21515960'

ADDR = (ccb_ebs_ip, ccb_ebs_port)
CHARSET = 'GB18030'


def get_bill(start_date, end_date, credit_acct):
    req_xml = f'''
            <?xml version="1.0" encoding="GB18030" standalone="yes"?>
            <TX>
                <REQUEST_SN>
                    1
                </REQUEST_SN>
                <CUST_ID>
                    {ccb_ebs_customer}
                </CUST_ID>
                <USER_ID>
                    {ccb_ebs_user}
                </USER_ID>
                <PASSWORD>
                    {ccb_ebs_password}
                </PASSWORD>
                <TX_CODE>
                    6W0300
                </TX_CODE>
                <LANGUAGE>
                    CN
                </LANGUAGE>
                <TX_INFO>
                    <ACC_NO>
                        {credit_acct}
                    </ACC_NO>
                    <START_DATE>
                        {start_date}
                    </START_DATE>
                    <END_DATE>
                        {end_date}
                    </END_DATE>
                    <START_PAGE>
                        1
                    </START_PAGE>
                </TX_INFO>
            </TX>
    '''
    req_data = ''.join([a.strip() for a in req_xml.split('\n')])
    print('request=', req_data)
    with socket(AF_INET, SOCK_STREAM) as tcpCliSock:
        tcpCliSock.connect(ADDR)
        tcpCliSock.settimeout(300)

        tcpCliSock.send(req_data.encode(CHARSET))
        res_data = b''
        while True:
            temp = tcpCliSock.recv(1024)
            if temp:
                res_data += temp
            else:
                break
        print(res_data.decode(CHARSET))


if __name__ == '__main__':
    for c_acct in bank_acct_list:
        get_bill('20240511', '20240511', c_acct)
        break
